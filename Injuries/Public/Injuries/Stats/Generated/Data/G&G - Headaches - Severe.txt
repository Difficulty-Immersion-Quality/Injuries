// ==================================== Filter Proxy ====================================

new entry "GOON_INJURY_GRIT_GLORY_SEVERE_HEADACHES"
type "StatusData" 
data "StatusType" "BOOST" 
// Headaches - Severe
data "DisplayName" "h45aaafddg2c12g48f8ga5f1g249fbbb3b205"
//
data "Description" "h61d833ffgd146g409egb735g9efbb7f1880a"
data "DescriptionParams" ""
data "TooltipSave" ""
data "Icon" "PassiveFeature_Generic_Blood"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;ApplyToDead;IgnoreResting"
//
data "StackId" "GOON_INJURY_GRIT_GLORY_HEADACHES"
data "StackPriority" "2"
data "StackType" "Overwrite"
data "OnApplyFunctors" "IF(HasStatus('GOON_DAMAGE_DEALT_PSYCHIC')):ApplyStatus(GOON_REAL_INJURY_GRIT_GLORY_SEVERE_HEADACHES,100,-1);IF(not HasStatus('GOON_DAMAGE_DEALT_PSYCHIC')):ApplyStatus(GOON_REAL_INJURY_GRIT_GLORY_SEVERE_HEADACHES,100,-1)"
data "RemoveConditions" "not HasStatus('GOON_REAL_INJURY_GRIT_GLORY_SEVERE_HEADACHES')"
data "RemoveEvents" "OnStatusRemoved"

// ==================================== Real Injury ====================================

new entry "GOON_REAL_INJURY_GRIT_GLORY_SEVERE_HEADACHES"
type "StatusData" 
data "StatusType" "BOOST" 
// Injury: Severe Headaches
data "DisplayName" "hff207c7dg70a1g41d1ga9b4g01ef5ef64210"
//
data "Description" "ha93d8f3bg60a3g4e7dga4d9gf56f6896dd7b"
data "DescriptionParams" ""
data "TooltipSave" ""
data "Icon" "PassiveFeature_Generic_Blood"
data "StatusPropertyFlags" "ApplyToDead;IgnoreResting"
//
data "StackId" "GOON_REAL_INJURY_GRIT_GLORY_HEADACHES"
data "StackPriority" "2"
data "StackType" "Ignore"
data "AuraRadius" ""
data "AuraStatuses" ""
data "Boosts" ""
data "OnApplyFunctors" ""
data "OnRemoveFunctors" ""
data "RemoveConditions" "not HasStatus('GOON_INJURY_GRIT_GLORY_SEVERE_HEADACHES')"
data "RemoveEvents" "OnStatusRemoved"
data "TickType" ""
data "TickFunctors" ""
data "StatusGroups" ""
data "Passives" "Goon_Real_Injury_Grit_Glory_Severe_Headaches_Removal_Technical_Passive;Goon_Real_Injury_Grit_Glory_Severe_Headaches_Technical_Passive"
//
data "AnimationStart" ""
data "AnimationLoop" ""
data "AnimationEnd" ""
data "StillAnimationType" ""
data "StillAnimationPriority" ""
data "SoundVocalStart" "PAIN"
data "SoundVocalLoop" ""
data "SoundVocalEnd" "RELAXED"
data "SoundStart" ""
data "SoundLoop" ""
data "SoundStop" ""
data "FreezeTime" ""
data "SplatterBloodAmount" "0.0"
data "SplatterDirtAmount" "0.0"
data "SplatterSweatAmount" "0.5"
data "ApplyEffect" ""
data "StatusEffect" ""
data "MaterialType" ""
data "MaterialApplyBody" ""
data "MaterialApplyArmor" ""
data "MaterialApplyWeapon" ""
data "MaterialApplyNormalMap" ""
data "MaterialFadeAmount" ""
data "MaterialParameters" ""

// Technical passive for removal
new entry "Goon_Real_Injury_Grit_Glory_Severe_Headaches_Removal_Technical_Passive"
type "PassiveData"
// Injury: Severe Headaches
data "DisplayName" "hff207c7dg70a1g41d1ga9b4g01ef5ef64210"
// 
data "Description" "ha93d8f3bg60a3g4e7dga4d9gf56f6896dd7b"
data "DescriptionParams" ""
data "TooltipSave" "Constitution"
data "Properties" "IsHidden"
//
data "StatsFunctors" "IF(SavingThrow(Ability.Constitution,10)):RemoveStatus(GOON_INJURY_GRIT_GLORY_SEVERE_HEADACHES)"
data "StatsFunctorContext" "OnHeal"
data "Conditions" "HasStatus('GOON_TARGET_REGENERATE_INJURY_REMOVE',context.Source) or HasStatus('GOON_TARGET_HEAL_INJURY_REMOVE',context.Source)"

// ==================================== Technicals for individual injury functionality ====================================

// Technical passive for stun
new entry "Goon_Real_Injury_Grit_Glory_Severe_Headaches_Technical_Passive"
type "PassiveData"
// Injury: Severe Headaches
data "DisplayName" "hff207c7dg70a1g41d1ga9b4g01ef5ef64210"
// 
data "Description" "ha93d8f3bg60a3g4e7dga4d9gf56f6896dd7b"
data "DescriptionParams" ""
data "TooltipSave" ""
data "Properties" "IsHidden"
//
data "StatsFunctors" "ApplyStatus(STUNNED,100,1)"
data "StatsFunctorContext" "OnDamaged"
data "Conditions" "not IsLastConditionRollSuccess(ConditionRollType.ConditionSavingThrow) and IsSavingThrow() and IsDamageTypePsychic() or IsDamageTypeForce() or IsDamageTypeBludgeoning()"

// ==================================== Flavour Proxies ====================================